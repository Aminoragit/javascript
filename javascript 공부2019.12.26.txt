1) 변수
var first = "~~";
alert(first+" !!");
결과값
~~ !!

2) 비교
== 같은지 여부
=== 완벽하게 동일한지 여부
!== 다른지 여부
>
>=

3) 조건문

if(true){alert('result : true');}

if(){;} else{;}

if(T){} else if(T) {} else if{T}~~else{}

4)비교 연산자와 조건문 결합(패스워드)

<body>
<script>
	id=prompt("아이디를 입력해주세요")
	if(id=="egoing"){alert('아이디가 일치합니다'}
	else{alert('아이디가 불일치합니다')}
</script>

5) 조건문은 중첩된다.
6) 논리 연산자
&& 좌 우 모두 참일때 and랑 같다.
|| 좌우 중 하나라도 참일대 or랑 같다.

!참==거짓
!거짓== 참

boolean 대체제들
 0 , !'' , !undefined , !변수, !null, !NaN




7) 반복문
while(조건){실행코드} 
ex) var i =0;
while(i<10)
{
document.write('conding fun!!<br />');
i++
}

for(초기값, 반복조건, 반복될때 변화값){반복할때 실행코드} 
for(var i=0; i<10; i++){
document.write('conding fun'+i+'<br />');
}


8)반복문의 제어
break로 중단
continue로 중단한 부분부터 실행


9) 함수
function 함수명 ([인자....[,인자]]){코드 return 반환값}
ex) function numbering(){
i=0;
while(i<10){
	document.write(i);
	i+=1;
	}
}
numbering();

10)함수 결과값
입력>>함수에서 연산>>결과값
ex func. get_num1(){return 1}
    func. get_num2(){return 12}
    alert(get_num1());
    alert(get_num2());
결과 = 1 12

한 함수에 return값이 여러개 있으면 가장 첫번째것이 return값으로 선정된다.

11) 함수 인자값
func get_num(arg){return arg;}

alert(get_num(10));
결과 = 10
인자는 복수인자도 된다

11-1) 함수 정의 다른 방법
var numbering = function(){
i=0;
while(i<10){document.write(i);
i+=1;
}
}
numbering();





12) 배열
var member=['1' , '10' , '3']
alert(member[0]); ==1이 나옴
alert(member[1]); == 10이 나옴

13) 배열과 반복문
func get_member(){
	return ['choi','Kim',yang'];}
members = get_member();

for(i=0; i<members.length; i++){
document.write(members[i].toUpperCase());
document.write('<br />');}
멤버가 순서대로 나온다.


14)배열의 크기
arr.length

15)배열에 값 추가
배열.push('값'); ->배열 맨끝에 추가
배열.concat(['값1','값2']);-> 복수원소 배열끝에 추가
배열.unshift('값'); ->맨앞에 추가
배열.splice(인덱스위치, 몇개 추가할지, '값');  


16)배열에 값 삭제
배열.shift(); ->맨 앞에값 삭제
배열.pop(); -> 맨 끝값 삭제
배열.sort(); -> 오름차순
배열.reverse(); ->내림차순


17)객체(dict)만들기
var grades = {'key1' : 10 , 'key2' : 15, 'key3' : 'agree'};
alert(grade['key1']);

for(key in grade){
document.write("key :" + key+"value" + grader[key]);
)}
파이썬이랑 똑같다.
dict의 키 값을 따른 dict로 쓸수있다.



가장 많이 쓰는것이 바로
<script src="이름.js"></script>이다. 다른곳에 정의한 script를 js파일로 저장하고
그저장한 js를 가져오는것이다
만약 다른 폴더에 있다면.
<script src="assets/js/jquery.min.js"></script>
이른식으로 /만 추가해주면 된다. 참고로

실행하는 html이 있는 폴더/assets/js/jquery.min.js"를 참고해서 위 코드처럼 작성하면 된다.


18) 노드가 대체 뭐지?
node.js 

19) 라이브러리(주로쓰는 모듈을 모아놓은 것)
대표적인게 : jQurry이다.


